@page "/options"
@inject SupportService SupportService

<PageTitle>Name Badge Automater | Options</PageTitle>

<h2 class="mb-4 text-2xl tracking-tight font-bold text-gray-900 dark:text-white">Options</h2>

<label class="mb-4 inline-flex relative items-center cursor-pointer" onclick="@ToggleTelemetry">
  <input type="checkbox" value="" class="sr-only peer" checked="@IsTelemetryEnabled">
  <div
    class="w-11 h-6 bg-gray-200 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600">
  </div>
  <span class="ml-3 text-sm font-medium text-gray-600 dark:text-gray-400">Anonymous analytics</span>
</label>
<br />

<h2 class="mb-4 text-2xl tracking-tight font-bold text-gray-900 dark:text-white">Help and support</h2>

<p class="mb-4 text-gray-600 dark:text-gray-400">
  This app is maintained in people's free time. If you have any
  questions or experience a problem, please reach out.
</p>

<a href="@MailToHref"
  class="mb-4 inline-block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Contact</a>
<br />

<h2 class="mb-4 text-2xl tracking-tight font-bold text-gray-900 dark:text-white">About</h2>

<div class="p-2 text-gray-600 bg-gray-100 rounded-lg dark:bg-gray-800 dark:text-gray-400">
  <code>@((MarkupString)AboutDetails)</code>
</div>


@code {
  string MailToHref = string.Empty;
  string AboutDetails = string.Empty;
  bool IsTelemetryEnabled => SupportService.IsTelemetryEnabled;

  protected async override Task OnAfterRenderAsync(bool firstRender)
  {
    if (!firstRender) return;

    MailToHref = await SupportService.GetMailToHref();
    AboutDetails = await SupportService.GetAboutDetails("<br />");
    StateHasChanged();
  }

  Action ToggleTelemetry => IsTelemetryEnabled ? SupportService.DisableTelemetry : SupportService.EnableTelemetry;
}
