@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject PlausibleService PlausibleService

@if (IsVisible)
{
  <div class="p-4 w-full max-w-xs text-gray-600 bg-gray-100 rounded-lg shadow dark:bg-gray-800 dark:text-gray-400"
  role="alert">
    <div class="flex">
      <div
      class="inline-flex flex-shrink-0 justify-center items-center w-8 h-8 text-blue-500 bg-blue-100 rounded-lg dark:text-blue-300 dark:bg-blue-900">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15">
          </path>
        </svg>
        <span class="sr-only">Refresh icon</span>
      </div>
      <div class="ml-3 text-sm font-normal">
        <span class="mb-1 text-sm font-semibold text-gray-900 dark:text-white">Update available</span>
        <div class="mb-2 text-sm font-normal">Refresh the page to use the latest version available with new features and
          fixes.</div>
        <div class="grid grid-cols-2 gap-2">
          <span @onclick="() => Refresh()"
          class="inline-flex justify-center w-full px-2 py-1.5 text-xs font-medium text-center text-white bg-blue-600 rounded-lg cursor-pointer hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-500 dark:hover:bg-blue-600 dark:focus:ring-blue-800">
            Refresh
          </span>
        </div>
      </div>
      <button type="button"
      class="ml-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex h-8 w-8 dark:text-gray-600 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700"
      data-dismiss-target="#toast-interactive" aria-label="Close" @onclick="() => IsVisible = false">
        <span class="sr-only">Close</span>
        <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd"
          d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
          clip-rule="evenodd"></path>
        </svg>
      </button>
    </div>
  </div>
}

@code {
  bool IsVisible = false;

  protected override async Task OnInitializedAsync()
  {
    await RegisterForUpdateAvailableNotification();
  }

  private async Task RegisterForUpdateAvailableNotification()
  {
    await JS.InvokeAsync<object>(
    identifier: "registerForUpdateAvailableNotification",
    DotNetObjectReference.Create(this),
    nameof(OnUpdateAvailable));
  }

  [JSInvokable(nameof(OnUpdateAvailable))]
  public async Task OnUpdateAvailable()
  {
    IsVisible = true;

    StateHasChanged();

    await Task.Delay(TimeSpan.FromSeconds(30));
    IsVisible = false;

    StateHasChanged();
  }

  private void Refresh()
  {
    PlausibleService.TrackEvent("ManualUpdate");
    NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
  }

}